/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.9
 * Generated at: 2025-08-05 18:17:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("  <!--   <meta charset=\"UTF-8\" /> -->\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/fancybox3/jquery.fancybox.css\">\n");
      out.write("  <script src=\"https://kit.fontawesome.com/14c95c3413.js\" crossorigin=\"anonymous\"></script>\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n");
      out.write("  <script src='");
      out.print(request.getContextPath() );
      out.write("/fancybox3/jquery.fancybox.js'></script>\n");
      out.write("\n");
      out.write("  <title>翁卡克MUISC</title>\n");
      out.write("  <link rel=\"icon\" type=\"image/x-icon\" href=\"");
      out.print(request.getContextPath());
      out.write("/images/favicon.ico\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/SubViews/NAV.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("  <!--內容-->\n");
      out.write("  <div class=\"content\">\n");
      out.write("    <!--BG-->\n");
      out.write("    <div class=\"BG\">\n");
      out.write("      <img class=\"BGLOGO\" src=\"images/LOGO.png\">\n");
      out.write("      <div class=\"bgtext\">\n");
      out.write("        <h1>JPOP</h1>\n");
      out.write("        <h1>VOCALOID</h1>\n");
      out.write("        <h1>ANIME</h1>\n");
      out.write("        <h1>VTuber</h1>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <!--BG END-->\n");
      out.write("    <!--懭告-->\n");
      out.write("    <div class=\"adsimages\">\n");
      out.write("      <div id=\"outer\">\n");
      out.write("        <ul id=\"imgList\">\n");
      out.write("          ");
 for(int i=1;i<11;i++) {
      out.write("\n");
      out.write("               <li><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/ads/");
      out.print(i);
      out.write(".png\" /></li>\n");
      out.write("              ");
 } 
      out.write('\n');
      out.write("\n");
      out.write("        </ul>\n");
      out.write("\n");
      out.write("        <div class=\"touchbtn\">\n");
      out.write("          <a href=\"javascript:;\" id=\"prevbtn\">&#8249</a>\n");
      out.write("          <div id=\"navContainer\">\n");
      out.write("            ");
 for(int i=1;i<11;i++) {
      out.write("\n");
      out.write("              <a href=\"javascript:;\"></a>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("          </div>\n");
      out.write("          <a href=\"javascript:;\" id=\"nextbtn\">&#8250</a>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <!--懭告 END-->\n");
      out.write("    <div class=\"content1\">\n");
      out.write("      <div class=\"content2\">\n");
      out.write("        <div class=\"depiction1\">\n");
      out.write("          <img class=\"MUICSimage\" src=\"images/homepicture/MUICS.png\">\n");
      out.write("          <h2>什麼是數位音樂? </h2>\n");
      out.write("          <p>在過去實體唱片當道的年代，音樂人需要與唱片公司或是代理發行商合作，來將製作好的實體唱片販售到唱片行等等店面通路。\n");
      out.write("            數位音樂發行也是相同的道理，在串流音樂已經成為主流的現在，音樂串流平台取代了實體唱片行，成為人們聆聽音樂的主要管道。音樂人不需要灌錄實體唱片。</p>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <!--卡片-->\n");
      out.write("\n");
      out.write("    <div class=\"cardbag\">\n");
      out.write("      <div class=\"page-content\">\n");
      out.write("        <div class=\"card\">\n");
      out.write("          <div class=\"cardcontent\">\n");
      out.write("            <h2 class=\"cardtitle\">J-POP</h2>\n");
      out.write("            <p class=\"cardcopy\">日本流行音樂（Japanese Popular Music，J-POP）是指一段時期內廣泛被大眾所接受和喜歡的日本音樂</p>\n");
      out.write("            <button class=\"cardbtn\"\n");
      out.write("              onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/store.jsp?category=JPOP'\">進入</button>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"card\">\n");
      out.write("          <div class=\"cardcontent\">\n");
      out.write("            <h2 class=\"cardtitle\">VOCALOID</h2>\n");
      out.write("            <p class=\"cardcopy\">VOCALOID(英文簡稱：VOCALO)是日本YAMAHA開發的電子歌聲合成軟體，輸入音調和歌詞，能合成貼近人類聲音的歌聲</p>\n");
      out.write("            <button class=\"cardbtn\"\n");
      out.write("              onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/store.jsp?category=VOCALOID'\">進入</button>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"card\">\n");
      out.write("          <div class=\"cardcontent\">\n");
      out.write("            <h2 class=\"cardtitle\">ANIME</h2>\n");
      out.write("            <p class=\"cardcopy\">動畫歌曲(animesong,稱為アニソン)是動畫作品的主題曲、片頭曲(OP)、片尾曲(ED)、插入曲(IN)、角色歌曲的總稱</p>\n");
      out.write("            <button class=\"cardbtn\"onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/store.jsp?category=ANIME'\">進入</button>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"card\">\n");
      out.write("          <div class=\"cardcontent\">\n");
      out.write("            <h2 class=\"cardtitle\">VTuber</h2>\n");
      out.write("            <p class=\"cardcopy\">虛擬YouTuber\n");
      out.write("              (VirtualYouTuber ,Vtuber),\n");
      out.write("              Vtuber是虛擬人物形象在網路影片平台上傳影片或直播的創作者</p>\n");
      out.write("            <button class=\"cardbtn\"onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/store.jsp?category=VTuber'\">進入</button>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("  <!--卡片 END-->\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/SubViews/IntroductionColumn.jsp", out, false);
      out.write("\n");
      out.write("  <!--內容結束-->\n");
      out.write("  <style>\n");
      out.write("    body {\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      align-items: center;\n");
      out.write("      margin: 0;\n");
      out.write("      border: 0;\n");
      out.write("      padding: 0;\n");
      out.write("      background: linear-gradient(45deg, #798c99 35%, #26262c 60%);\n");
      out.write("      background: -moz-linear-gradient(45deg, #798c99 35%, #26262c 60%);\n");
      out.write("      background: -webkit-linear-gradient(45deg, #6f8797 35%, #26262c 60%);\n");
      out.write("      background: -o-linear-gradient(45deg, #798c99 35%, #26262c 60%);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /*內容*/\n");
      out.write("    .content {\n");
      out.write("      padding-top: 3.2em;\n");
      out.write("      width: 95vw;\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      justify-content: space-around;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /*BG*/\n");
      out.write("    .BG {\n");
      out.write("      width: 100%;\n");
      out.write("      height: 50vw;\n");
      out.write("      background: no-repeat top center/100% url(images/homepicture/BG.jpg);\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      align-items: center;\n");
      out.write("      justify-content: space-around;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .BGLOGO {\n");
      out.write("      width: 20vw;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .bgtext {\n");
      out.write("      width: 100%;\n");
      out.write("      display: flex;\n");
      out.write("      justify-content: space-around;\n");
      out.write("      font-size: 2vw;\n");
      out.write("      color: khaki;\n");
      out.write("      text-decoration-line: underline;\n");
      out.write("      text-shadow: -1px -1px 0 #ffffca, 2px 2px 0 #333333;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /*BG END*/\n");
      out.write("\n");
      out.write("    /*懭告*/\n");
      out.write("\n");
      out.write("    #outer,\n");
      out.write("    #imgList>li>img {\n");
      out.write("      width: 95vw;\n");
      out.write("      height: 60vh;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #outer {\n");
      out.write("      margin: 3.2em auto;\n");
      out.write("      position: relative;\n");
      out.write("      overflow: hidden;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #imgList {\n");
      out.write("      list-style: none;\n");
      out.write("      position: absolute;\n");
      out.write("      left: 0px;\n");
      out.write("      width: 95vw;\n");
      out.write("      height: 50vh;\n");
      out.write("      padding: 0em;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #imgList>li {\n");
      out.write("      float: left;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .touchbtn {\n");
      out.write("      width: 100%;\n");
      out.write("      height: 100%;\n");
      out.write("      display: flex;\n");
      out.write("      justify-content: space-between;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #prevbtn,\n");
      out.write("    #nextbtn {\n");
      out.write("      display: flex;\n");
      out.write("      z-index: 5;\n");
      out.write("      padding: 0em 0.1em;\n");
      out.write("      align-items: center;\n");
      out.write("      font-size: 10vw;\n");
      out.write("      color: rgb(194, 194, 191);\n");
      out.write("      text-decoration: none;\n");
      out.write("      opacity: 0.5;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #prevbtn:hover,\n");
      out.write("    #nextbtn:hover {\n");
      out.write("      opacity: 0.8;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #prevbtn:active,\n");
      out.write("    #nextbtn:active {\n");
      out.write("      opacity: 1;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #navContainer {\n");
      out.write("      display: flex;\n");
      out.write("      justify-content: center;\n");
      out.write("      align-items: flex-end;\n");
      out.write("      padding-bottom: 0.6em;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #navContainer>a {\n");
      out.write("      z-index: 5;\n");
      out.write("      float: left;\n");
      out.write("      width: 5vw;\n");
      out.write("      height: 2vw;\n");
      out.write("      background-color: rgb(230, 230, 230);\n");
      out.write("      margin: 0 5px;\n");
      out.write("      opacity: 0.3;\n");
      out.write("      border-radius: 5;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #navContainer>a:hover {\n");
      out.write("      background-color: rgb(255, 153, 0);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /*懭告 END*/\n");
      out.write("    /**/\n");
      out.write("    .content1 {\n");
      out.write("      width: 95vw;\n");
      out.write("      height: 50vw;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .content2 {\n");
      out.write("      background: no-repeat center/160% url(images/homepicture/Handspeople.jpg);\n");
      out.write("      background-attachment: fixed;\n");
      out.write("      width: 95vw;\n");
      out.write("      height: 50vw;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .depiction1 {\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      justify-content: flex-start;\n");
      out.write("      align-items: center;\n");
      out.write("      width: 50%;\n");
      out.write("      height: 50vw;\n");
      out.write("      background-color: rgba(136, 136, 136, 0.685);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .depiction1 h2 {\n");
      out.write("      color: #EEEEEE;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .depiction1 p {\n");
      out.write("      margin: 0 1em;\n");
      out.write("      font-size: 2vw;\n");
      out.write("      color: #EEEEEE;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .MUICSimage {\n");
      out.write("      width: 20vw;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (max-width: 420px) {\n");
      out.write("      .depiction1 h2 {\n");
      out.write("        margin: 0.2em 0;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .depiction1 {\n");
      out.write("        overflow: scroll;\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (max-width : 800px) {\n");
      out.write("      .content2 {\n");
      out.write("        background: no-repeat center/100% url(images/homepicture/Handspeople.jpg);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .depiction1 {\n");
      out.write("        width: 100%;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /**/\n");
      out.write("\n");
      out.write("    /*卡片*/\n");
      out.write("    :root {\n");
      out.write("      --d: 700ms;\n");
      out.write("      --e: cubic-bezier(0.19, 1, 0.22, 1);\n");
      out.write("      --font-sans: 'Rubik', sans-serif;\n");
      out.write("      --font-serif: 'Cardo', serif;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardbag {\n");
      out.write("      display: grid;\n");
      out.write("      place-items: center;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .page-content {\n");
      out.write("      display: grid;\n");
      out.write("      grid-gap: 1em;\n");
      out.write("      padding: 1em 0em;\n");
      out.write("      max-width: 100%;\n");
      out.write("      margin: 0 auto;\n");
      out.write("      font-family: var(--font-sans);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (min-width: 600px) {\n");
      out.write("      .page-content {\n");
      out.write("        grid-template-columns: repeat(2, 1fr);\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (min-width: 800px) {\n");
      out.write("      .page-content {\n");
      out.write("        grid-template-columns: repeat(4, 1fr);\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .card {\n");
      out.write("      box-sizing: border-box;\n");
      out.write("      position: relative;\n");
      out.write("      display: flex;\n");
      out.write("      align-items: flex-end;\n");
      out.write("      overflow: hidden;\n");
      out.write("      padding: 1em;\n");
      out.write("      width: 100%;\n");
      out.write("      text-align: center;\n");
      out.write("      color: whitesmoke;\n");
      out.write("      background-color: whitesmoke;\n");
      out.write("      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1), 0 2px 2px rgba(0, 0, 0, 0.1), 0 4px 4px rgba(0, 0, 0, 0.1), 0 8px 8px rgba(0, 0, 0, 0.1), 0 16px 16px rgba(0, 0, 0, 0.1);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (min-width: 600px) {\n");
      out.write("      .card {\n");
      out.write("        height: 22em;\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .card:before {\n");
      out.write("      content: '';\n");
      out.write("      position: absolute;\n");
      out.write("      top: 0;\n");
      out.write("      left: 0;\n");
      out.write("      width: 100%;\n");
      out.write("      height: 110%;\n");
      out.write("      background-size: cover;\n");
      out.write("      background-position: 0 0;\n");
      out.write("      transition: transform calc(var(--d) * 1.5) var(--e);\n");
      out.write("      pointer-events: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .card:after {\n");
      out.write("      content: '';\n");
      out.write("      display: block;\n");
      out.write("      position: absolute;\n");
      out.write("      top: 0;\n");
      out.write("      left: 0;\n");
      out.write("      width: 100%;\n");
      out.write("      height: 200%;\n");
      out.write("      pointer-events: none;\n");
      out.write("      background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%,\n");
      out.write("          rgba(0, 0, 0, 0.009) 11.7%, rgba(0, 0, 0, 0.034) 22.1%, rgba(0, 0, 0, 0.072) 31.2%, rgba(0, 0, 0, 0.123) 39.4%, rgba(0, 0, 0, 0.182) 46.6%, rgba(0, 0, 0, 0.249) 53.1%, rgba(0, 0, 0, 0.32) 58.9%, rgba(0, 0, 0, 0.394) 64.3%, rgba(0, 0, 0, 0.468) 69.3%, rgba(0, 0, 0, 0.54) 74.1%, rgba(0, 0, 0, 0.607) 78.8%, rgba(0, 0, 0, 0.668) 83.6%, rgba(0, 0, 0, 0.721) 88.7%, rgba(0, 0, 0, 0.762) 94.1%, rgba(0, 0, 0, 0.79) 100%);\n");
      out.write("      transform: translateY(-50%);\n");
      out.write("      transition: transform calc(var(--d) * 2) var(--e);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .card:nth-child(1):before {\n");
      out.write("      background: no-repeat center url(images/card/jpop.jpg);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .card:nth-child(2):before {\n");
      out.write("      background: no-repeat center url(images/card/VOCALOID.png);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .card:nth-child(3):before {\n");
      out.write("      background: no-repeat top center url(images/card/ANIME.jpg);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .card:nth-child(4):before {\n");
      out.write("      background: no-repeat center url(images/card/VTuber.jpg);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardcontent {\n");
      out.write("      position: relative;\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      align-items: center;\n");
      out.write("      width: 100%;\n");
      out.write("      padding: 0em;\n");
      out.write("      transition: transform var(--d) var(--e);\n");
      out.write("      z-index: 1;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardcontent>*+* {\n");
      out.write("      margin-top: 1em;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardtitle {\n");
      out.write("      font-size: 1.3em;\n");
      out.write("      font-weight: bold;\n");
      out.write("      line-height: 1.2;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardcopy {\n");
      out.write("      font-family: var(--font-serif);\n");
      out.write("      font-size: 1.125em;\n");
      out.write("      font-style: italic;\n");
      out.write("      line-height: 1.35;\n");
      out.write("      width: 100%;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardbtn {\n");
      out.write("      cursor: pointer;\n");
      out.write("      margin-top: 1em;\n");
      out.write("      padding: 0.75rem 1.5rem;\n");
      out.write("      font-size: 0.65rem;\n");
      out.write("      font-weight: bold;\n");
      out.write("      letter-spacing: 0.025rem;\n");
      out.write("      text-transform: uppercase;\n");
      out.write("      color: white;\n");
      out.write("      background-color: black;\n");
      out.write("      border: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardbtn:hover {\n");
      out.write("      background-color: #0d0d0d;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cardbtn:focus {\n");
      out.write("      outline: 1px dashed yellow;\n");
      out.write("      outline-offset: 3px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (hover: hover) and (min-width: 600px) {\n");
      out.write("      .card:after {\n");
      out.write("        transform: translateY(0);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .cardcontent {\n");
      out.write("        transform: translateY(calc(100% - 4.5rem));\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .cardcontent>*:not(.cardtitle) {\n");
      out.write("        opacity: 0;\n");
      out.write("        transform: translateY(1rem);\n");
      out.write("        transition: opacity var(--d) var(--e);\n");
      out.write("        transition: transform var(--d) var(--e), opacity var(--d) var(--e);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .card:hover,\n");
      out.write("      .card:focus-within {\n");
      out.write("        align-items: center;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .card:hover:before,\n");
      out.write("      .card:focus-within:before {\n");
      out.write("        transform: translateY(-4%);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .card:hover:after,\n");
      out.write("      .card:focus-within:after {\n");
      out.write("        transform: translateY(-50%);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .card:hover .cardcontent,\n");
      out.write("      .card:focus-within .cardcontent {\n");
      out.write("        transform: translateY(0);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .card:hover .cardcontent>*:not(.cardtitle),\n");
      out.write("      .card:focus-within .cardcontent>*:not(.cardtitle) {\n");
      out.write("        opacity: 1;\n");
      out.write("        transform: translateY(0);\n");
      out.write("        transition-delay: calc(var(--d) / 8);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .card:focus-within:before,\n");
      out.write("      .card:focus-within:after,\n");
      out.write("      .card:focus-within .cardcontent,\n");
      out.write("      .card:focus-within .cardcontent>*:not(.cardtitle) {\n");
      out.write("        transition-duration: 0s;\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /*卡片 END*/\n");
      out.write("  </style>\n");
      out.write("  <script>\n");
      out.write("    /*廣告*/\n");
      out.write("    $(document).ready(init);\n");
      out.write("    function init() {\n");
      out.write("      // window.onload = function () {\n");
      out.write("      var imgList = document.getElementById(\"imgList\");\n");
      out.write("      var navContainer = document.getElementById(\"navContainer\");\n");
      out.write("      var outer = document.getElementById(\"outer\");\n");
      out.write("      var prevbtn = document.getElementById(\"prevbtn\");\n");
      out.write("      var nextbtn = document.getElementById(\"nextbtn\");\n");
      out.write("      var imgArr = document.querySelectorAll(\"#imgList>li>img\");\n");
      out.write("\n");
      out.write("      //-- 獲取元素樣式，最低兼容ie8\n");
      out.write("      function getStyle(obj, name) {\n");
      out.write("        if (window.getComputedStyle) {\n");
      out.write("          return getComputedStyle(obj, null)[name];\n");
      out.write("        } else {\n");
      out.write("          return obj.currentStyle[name];\n");
      out.write("        }\n");
      out.write("      }\n");
      out.write("      //-- 獲取outer的寬度\n");
      out.write("      var getOuterWidth = getStyle(outer, \"width\");\n");
      out.write("      var widthObject = getOuterWidth.match(/\\d*/);\n");
      out.write("      var width = widthObject[0];\n");
      out.write("      //-- 根據圖片的數量設置ul的總寬度\n");
      out.write("      imgList.style.width = width * imgArr.length + 50 + \"px\";\n");
      out.write("      function move(obj, attr, target, speed, callback) {\n");
      out.write("        clearInterval(obj.timer);\n");
      out.write("        var current = parseInt(getStyle(obj, attr));\n");
      out.write("        if (current > target) {\n");
      out.write("          speed = -speed;\n");
      out.write("        }\n");
      out.write("        obj.timer = setInterval(function () {\n");
      out.write("          var oldValue = parseInt(getStyle(obj, attr));\n");
      out.write("          var newValue = oldValue + speed;\n");
      out.write("          if ((speed < 0 && newValue < target) || (speed > 0 && newValue > target)) {\n");
      out.write("            newValue = target;\n");
      out.write("          }\n");
      out.write("          obj.style[attr] = newValue + \"px\";\n");
      out.write("          if (newValue == target) {\n");
      out.write("            clearInterval(obj.timer);\n");
      out.write("            callback && callback();\n");
      out.write("          }\n");
      out.write("        }, 5);\n");
      out.write("      }\n");
      out.write("      //設置默認選中的效果\n");
      out.write("      var index = 0;\n");
      out.write("      var allA = document.querySelectorAll(\"#navContainer>a\");\n");
      out.write("      allA[index].style.backgroundColor = \"rgb(255, 238, 5)\";\n");
      out.write("      //-- 正常開啟自動切換函數\n");
      out.write("      autoChange();\n");
      out.write("      function setA() {\n");
      out.write("        if (index >= imgArr.length) {\n");
      out.write("          index = 0;\n");
      out.write("          imgList.style.left = 0;\n");
      out.write("        }\n");
      out.write("      }\n");
      out.write("      function setRed() {\n");
      out.write("        for (var i = 0; i < allA.length; i++) {\n");
      out.write("          allA[i].style.backgroundColor = \"\";\n");
      out.write("        }\n");
      out.write("        allA[index].style.backgroundColor = \"rgb(255, 238, 5)\";\n");
      out.write("      }\n");
      out.write("      var timer;\n");
      out.write("      //--自動切換圖片\n");
      out.write("      function autoChange() {\n");
      out.write("        timer = setInterval(function () {\n");
      out.write("          index++;\n");
      out.write("          index %= imgArr.length;\n");
      out.write("          move(imgList, \"left\", -width * index, 20, function () {\n");
      out.write("            setA();\n");
      out.write("            setRed();\n");
      out.write("          });\n");
      out.write("        }, 3000);\n");
      out.write("      }\n");
      out.write("      //--實現點擊導航點切換圖片\n");
      out.write("      //--調用setA、move、autochange函數\n");
      out.write("      for (var i = 0; i < allA.length; i++) {\n");
      out.write("        allA[i].num = i;\n");
      out.write("        allA[i].onclick = function () {\n");
      out.write("          clearInterval(timer);\n");
      out.write("          index = this.num;\n");
      out.write("          setRed();\n");
      out.write("          move(imgList, \"left\", -width * index, 20, function () {\n");
      out.write("            autoChange();\n");
      out.write("          });\n");
      out.write("        }\n");
      out.write("        prevbtn.onclick = function () {\n");
      out.write("          clearInterval(timer);\n");
      out.write("          if (index != 0) {\n");
      out.write("            index = index - 1;\n");
      out.write("          }\n");
      out.write("          setRed();\n");
      out.write("          move(imgList, \"left\", -width * index, 20, function () {\n");
      out.write("            autoChange();\n");
      out.write("          });\n");
      out.write("        }\n");
      out.write("        nextbtn.onclick = function () {\n");
      out.write("          clearInterval(timer);\n");
      out.write("          if (index != allA.length - 1) {\n");
      out.write("            index = index + 1;\n");
      out.write("          }\n");
      out.write("          setRed();\n");
      out.write("          //UL,向左,寬度:初始寬度(-width * index),速度\n");
      out.write("          move(imgList, \"left\", -width * index, 20, function () {\n");
      out.write("            autoChange();\n");
      out.write("          });\n");
      out.write("        }\n");
      out.write("      }\n");
      out.write("      var startX = 0;\n");
      out.write("      var moveX = 0;\n");
      out.write("      var distanceX = 0;\n");
      out.write("      var isMove = false;\n");
      out.write("      outer.addEventListener('touchstart', function (e) {\n");
      out.write("        clearInterval(timer); //--清除定時器,要記得事件結束之后再打開\n");
      out.write("        startX = e.touches[0].clientX;  //--觸摸點的橫坐標\n");
      out.write("      });\n");
      out.write("      outer.addEventListener('touchmove', function (e) {\n");
      out.write("        moveX = e.touches[0].clientX;//--獲取當前手的橫坐標\n");
      out.write("        distanceX = moveX - startX; //--移動的距離=現在-初始\n");
      out.write("        isMove = true;//證明滑動過\n");
      out.write("        move(imgList, \"left\", -width * index + distanceX, 20, function () { });\n");
      out.write("      });\n");
      out.write("      outer.addEventListener('touchend', function () {\n");
      out.write("        if (isMove && Math.abs(distanceX) > width / 3) {\n");
      out.write("          if (distanceX > 0 && index != 0) {\n");
      out.write("            index = index - 1;\n");
      out.write("          }\n");
      out.write("          else if (distanceX < 0 && index != imgArr.length - 1) {\n");
      out.write("            index = index + 1;\n");
      out.write("          }\n");
      out.write("          move(imgList, \"left\", -width * index, 20, function () { });\n");
      out.write("        }\n");
      out.write("        else if (isMove && Math.abs(distanceX) < width / 3) {\n");
      out.write("          move(imgList, \"left\", -width * index, 20, function () { });\n");
      out.write("        }\n");
      out.write("        setRed();\n");
      out.write("        autoChange();\n");
      out.write("      });\n");
      out.write("    }\n");
      out.write(" /*廣告 END*/\n");
      out.write("  </script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
