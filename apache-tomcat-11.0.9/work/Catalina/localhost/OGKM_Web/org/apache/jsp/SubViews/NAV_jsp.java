/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.9
 * Generated at: 2025-08-05 18:17:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.SubViews;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import uuu.ogkm.entity.Customer;

public final class NAV_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("uuu.ogkm.entity.Customer");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- <head> -->\n");
      out.write("<!-- <meta charset=\"UTF-8\" /> -->\n");
      out.write("<!--設定手機行動版-->\n");
      out.write("<!-- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> -->\n");
      out.write("\n");
      out.write("<!-- <script src=\"https://kit.fontawesome.com/14c95c3413.js\" crossorigin=\"anonymous\"></script> -->\n");
      out.write("<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script> -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- <title>翁卡克MUISC</title> -->\n");
      out.write("\n");
      out.write("<!-- </head> -->\n");
      out.write("\n");
      out.write("<!-- <body> -->\n");
      out.write("	<nav class=\"header\">\n");
      out.write("		<!--LOGO-->\n");
      out.write("		<div class=\"logo\">\n");
      out.write("			<a href=\"");
      out.print(request.getContextPath());
      out.write("\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/LOGO.png\"></a>\n");
      out.write("		</div>\n");
      out.write("		<!--LOGO/-->\n");
      out.write("		");

		Customer member = (Customer) session.getAttribute("member");
		
      out.write("\n");
      out.write("		<!--選單-->\n");
      out.write("		<div id=\"#menu\">\n");
      out.write("			<ul class=\"menu\">\n");
      out.write("				<form class=\"searchbag\" action=\"/OGKM/store.jsp\" method=\"GET\">\n");
      out.write("					<input type=\"search\" name=\"keyword\" placeholder=\"SEARCH\"\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.keyword != null ? param.keyword : ''}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <input type=\"submit\" value=\"搜尋\">\n");
      out.write("				</form>\n");
      out.write("				<li><a href=\"");
      out.print(request.getContextPath());
      out.write("\"><i class=\"fas fa-home\"></i>\n");
      out.write("						<p>首頁</p> </a></li>\n");
      out.write("				<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/store.jsp\">\n");
      out.write("				<i class=\"fas fa-archive\"></i>\n");
      out.write("						<p>商店</p> </a></li>\n");
      out.write("				<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/register.jsp\"><i\n");
      out.write("						class=\"fas fa-edit\"></i>\n");
      out.write("						<p>註冊</p> </a></li>\n");
      out.write("				<!--未登入出現-->\n");
      out.write("				");
 if (member == null) { 
      out.write("\n");
      out.write("				<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/login.jsp\"><i\n");
      out.write("						class=\"fas fa-sign-in-alt\"></i>\n");
      out.write("						<p>登入</p> </a></li>	\n");
      out.write("				<!--登入出現-->\n");
      out.write("				");
 } else { 
      out.write("\n");
      out.write("				<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/logout.do\"><i\n");
      out.write("						class=\"fas fa-sign-out-alt\"></i>\n");
      out.write("						<p>登出</p> </a></li>\n");
      out.write("				");
 } 
      out.write("\n");
      out.write("				<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/member/member.jsp\"><i class=\"fas fa-user\"></i>\n");
      out.write("						<p class=\"username\">");
      out.print(member!=null?member.getName():"用戶" );
      out.write(" </p></a></li>\n");
      out.write("				<!--登入出現-->\n");
      out.write("				");
      out.write("\n");
      out.write("				<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/member/cart.jsp\">\n");
      out.write("				<i class=\"fas fa-cart-arrow-down\"></i>\n");
      out.write("				<span class='cartQty'>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.cart.getTotalQuantity()}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\n");
      out.write("				<p>購物車</p> </a></li>\n");
      out.write("						\n");
      out.write("				");
      out.write("\n");
      out.write("				<li class=\"lastli\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/member/MUSIC.jsp\"><i\n");
      out.write("				class=\"fas fa-headphones-alt\"></i>\n");
      out.write("				<p>線上聽</p> </a></li>\n");
      out.write("				<li class=\"lastli\"><a href=\"#ABUS\"><i\n");
      out.write("						class=\"fas fa-exclamation-circle\"></i>\n");
      out.write("						<p>關於</p> </a>\n");
      out.write("						</li>\n");
      out.write("<!-- 				<a href=\"#\" class=\"burgerclose\"><i class=\"fas fa-times\"></i></a> -->\n");
      out.write("			</ul>\n");
      out.write("			<!--漢堡-->\n");
      out.write("			<a href=\"#\" id=\"burger\"><i class=\"fas fa-bars\"></i></a>\n");
      out.write("		</div>\n");
      out.write("	</nav>\n");
      out.write("\n");
      out.write("	<!--CSS-->\n");
      out.write("	<style>\n");
      out.write("	\n");
      out.write("body {\n");
      out.write("	margin: 0;\n");
      out.write("	border: 0;\n");
      out.write("	padding: 0;\n");
      out.write("}\n");
      out.write("/*NAV選單*/\n");
      out.write(".header {\n");
      out.write("	/*header 設定成 menu 選單的相對定位父元素*/\n");
      out.write("	display:flex;\n");
      out.write("	justify-content:space-between;\n");
      out.write("	width: 100%;\n");
      out.write("	background: linear-gradient(0deg, #798c99 35%, #26262c 60%);\n");
      out.write("	background: -moz-linear-gradient(0deg, #798c99 35%, #26262c 60%);\n");
      out.write("	/*moz代表firefox*/\n");
      out.write("	background: -webkit-linear-gradient(0deg, #798c99 35%, #26262c 60%);\n");
      out.write("	/*webkit代表chrome*/\n");
      out.write("	background: -o-linear-gradient(45deg, #8BC0E3 35%, #5247CF 60%);\n");
      out.write("	/*o代表opera*/\n");
      out.write("	height: 3.2em;\n");
      out.write("	/* border-bottom: 3px solid rgb(6, 151, 247);*/\n");
      out.write("	/*導覽列底線顏色*/\n");
      out.write("	position: fixed;\n");
      out.write("	/*box-shadow:1px 1px 10px #000;/*陰影效果*/\n");
      out.write("	z-index: 500;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".logo {\n");
      out.write("	display: flex;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".logo img {\n");
      out.write("	position: absolute;\n");
      out.write("	height: 3.5em;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*選單*/\n");
      out.write(".menu {\n");
      out.write("	display: flex;\n");
      out.write("	flex-direction: row;\n");
      out.write("	justify-content: flex-end;\n");
      out.write("	margin: 0px;\n");
      out.write("	padding: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".searchbag {\n");
      out.write("	display: flex;\n");
      out.write("	justify-content: center;\n");
      out.write("	align-items: center;\n");
      out.write("	margin-right: 2em;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".searchbag input[type=\"search\"] {\n");
      out.write("	width: 20vw;\n");
      out.write("	height: 2em;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".searchbag input[type=\"submit\"] {\n");
      out.write("	width: 5em;\n");
      out.write("	height: 2em;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menu li {\n");
      out.write("	float: left;\n");
      out.write("	width: 3.5em;\n");
      out.write("	list-style: none;\n");
      out.write("	/* 移除項目符號 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menu li a {\n");
      out.write("	display: block;\n");
      out.write("	color: #40dfd7;\n");
      out.write("	/*選單文字顏色*/\n");
      out.write("	text-decoration: none;\n");
      out.write("	padding: 0.9em 0em 0.3em 0em;\n");
      out.write("	text-align: center;\n");
      out.write("	/*文字置中*/\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menu li a:hover {\n");
      out.write("	background: radial-gradient(circle at top, #5247CF 50%, #528fe4 70%, #8BC0E3 80%);\n");
      out.write("	border-radius: 0px 0px 10px 10px;\n");
      out.write("	-webkit-border-radius: 0px 0px 10px 10px;\n");
      out.write("	-moz-border-radius: 0px 0px 10px 10px;\n");
      out.write("	color: #fff;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menu li a p {\n");
      out.write("	margin: 0px 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menu .lastli {\n");
      out.write("	border: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".username {\n");
      out.write("white-space: nowrap;\n");
      out.write("	overflow: hidden;\n");
      out.write("}\n");
      out.write("/*漢堡選單*/\n");
      out.write("#burger {\n");
      out.write("	display: none;\n");
      out.write("	/*在PC上隱藏漢堡選單*/\n");
      out.write("	color: #ffffff;\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write(".burgerclose {\n");
      out.write("	display: none;\n");
      out.write("	/*在PC上隱藏漢堡選單*/\n");
      out.write("	color: #e94040;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*出現漢堡選單*/\n");
      out.write("\n");
      out.write("@media ( max-width : 800px) {\n");
      out.write("	.menu {\n");
      out.write("		width: 100%;\n");
      out.write("		/* 選單出現*/\n");
      out.write("		display: block;\n");
      out.write("		/*隱藏選單開始*/\n");
      out.write("		max-height: 0;\n");
      out.write("		overflow: hidden;\n");
      out.write("		/*隱藏選單結束*/\n");
      out.write("		/*漸變效果*/\n");
      out.write("		transition: max-height 1s;\n");
      out.write("		margin-top: 0px;\n");
      out.write("		/*絕對定位疊在網頁上*/\n");
      out.write("		position: absolute;\n");
      out.write("		/*權重*/\n");
      out.write("		z-index: 100;\n");
      out.write("		/*header 線條距離*/\n");
      out.write("		top: 3.2em;\n");
      out.write("		/* left:0 right:0表示滿版 */\n");
      out.write("		text-align: center;\n");
      out.write("		left: max-content;\n");
      out.write("		right: 0;\n");
      out.write("		height: 100vh;\n");
      out.write("		background: rgba(0,0,0,0.8);\n");
      out.write("	}\n");
      out.write("	.searchbag {\n");
      out.write("		display: flex;\n");
      out.write("		justify-content: center;\n");
      out.write("		align-items: center;\n");
      out.write("		padding: 1em 0;\n");
      out.write("		background: linear-gradient(90deg, #65b1dd 35%, #5c87e2 60%);\n");
      out.write("		margin-right: 0em;\n");
      out.write("	}\n");
      out.write("	.searchbag input[type=\"search\"] {\n");
      out.write("		width: 50vw;\n");
      out.write("		height: 2em;\n");
      out.write("	}\n");
      out.write("	.logo {\n");
      out.write("		width: 100%;\n");
      out.write("		display: flex;\n");
      out.write("		justify-content: center;\n");
      out.write("	}\n");
      out.write("	.menu li {\n");
      out.write("		flex-direction: column;\n");
      out.write("		width: 100%;\n");
      out.write("		align-items: flex-end;\n");
      out.write("		background: linear-gradient(90deg, #65b1dd 35%, #5c87e2 60%);\n");
      out.write("		border-bottom: 1px dashed #5452df;\n");
      out.write("	}\n");
      out.write("	.menu li a {\n");
      out.write("		transition: all 0.3s;\n");
      out.write("		color: #290ab1;\n");
      out.write("		padding: 0.8em 1em;\n");
      out.write("	}\n");
      out.write("	.menu li a:hover {\n");
      out.write("		border-radius: 0px 0px 0px 0px;\n");
      out.write("		-webkit-border-radius: 0px 0px 0px 0px;\n");
      out.write("		-moz-border-radius: 0px 0px 0px 0px;\n");
      out.write("		background: radial-gradient(circle at 100%, #5247CF 40%, #528fe4 60%, #8BC0E3 80%);\n");
      out.write("		color: #fff;\n");
      out.write("	}\n");
      out.write("	#burger {\n");
      out.write("		display: flex;\n");
      out.write("		justify-content:flex-end;\n");
      out.write("		font-size: 2.5em;\n");
      out.write("		margin: 0.25em 0.25em 0 0;\n");
      out.write("		text-decoration: none;\n");
      out.write("		/* 移除超連結底線 */\n");
      out.write("	}\n");
      out.write("	.fa-times {\n");
      out.write("	width:35px;\n");
      out.write(" \n");
      out.write("		color: #c4c4c4;\n");
      out.write("		text-decoration: none;\n");
      out.write("	}\n");
      out.write("	.fa-times:hover {\n");
      out.write("		color: azure;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	/*jQuery點擊後動態在 body 加上 class 影響選單高度*/\n");
      out.write("	.burger-show .menu {\n");
      out.write("		max-height: 100vh;\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media ( max-width : 499px) {\n");
      out.write("	.menu {\n");
      out.write("		overflow:scroll;\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("/*NAV選單END*/\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("	\n");
      out.write("		/*NAV選單*/\n");
      out.write("		$(document).ready(function() {\n");
      out.write("			$('#burger').on('click', function(event) {\n");
      out.write("				//$(\".burgerclose\").click(hideHandler);\n");
      out.write("				// 忽略讓原來 <a> 標籤本身的連結功能\n");
      out.write("				event.preventDefault();\n");
      out.write("				$('body').toggleClass('burger-show');//body新增toggleclass(開關class)\n");
      out.write("				/*  如果某個類別存在，就刪除他，若不存在就新增。*/\n");
      out.write("			});\n");
      out.write("			\n");
      out.write("		});\n");
      out.write("		var burger = document.getElementById(\"burger\");\n");
      out.write("		burger.addEventListener(\"click\", function(e){\n");
      out.write("		  if(e.target.classList.contains('fa-bars')){\n");
      out.write("		    e.target.classList.remove('fa-bars');\n");
      out.write("		    e.target.classList.add('fa-times');\n");
      out.write("		    $('body').toggleClass('burger-show', false);\n");
      out.write("		  }else{\n");
      out.write("		    e.target.classList.remove('fa-times');\n");
      out.write("		    e.target.classList.add('fa-bars')\n");
      out.write("		    $('body').toggleClass('burger-show', true);\n");
      out.write("		  }\n");
      out.write("		});\n");
      out.write("\n");
      out.write("// 		$(document).mouseup(function(event) {\n");
      out.write("// 			var con = $('.searchbag');\n");
      out.write("// 			var con1 = $('.searchbag input[type=\"search\"]');\n");
      out.write("// 			if (!con.is(event.target) && !con1.is(event.target)) {\n");
      out.write("// 				$('body').toggleClass('burger-show', false);\n");
      out.write("// 			}\n");
      out.write("// 		});\n");
      out.write("\n");
      out.write("// 		function hideHandler(e) {\n");
      out.write("// 			$('body').toggleClass('burger-show', false);\n");
      out.write("// 			event.preventDefault();\n");
      out.write("// 			e.stopPropagation();\n");
      out.write("// 		}\n");
      out.write("	</script>\n");
      out.write("<!-- </body> -->");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
